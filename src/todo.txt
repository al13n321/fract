Critical features:
- Saving everything to a file
- Runtime reloading and rebuilding of everything
- Cubemap
- Rift
- Windows

Important features:
- Loading values for uniforms from separate file
- Dynamically changing resolution based on preformance
- Fast switching between rendering to rift and to window

Plan:
- Rift
  - Quaternion-based camera with modes:
    yaw (rift), yaw+pitch (no rift), space (both)
    "camera_mode" separate in config to not trigger reloading?
    Config-aware Camera.
  - OVRConrtoller.
- Mandelbulb
- Good lighting
- Saving everything to file (shaders, camera)
	Should be able to save current view as a camera, so it can be pasted here later to restore view.
  Or save the entire state, with camera inlined.
  Or get everything necessary to reproduce current view (code, configs) in a separate directory,
    i.e. export current state as an isolated editable project.
- Loading uniforms and additional preprocessor definitions from config
- Preprocessor
- Lookup cube, precalcing synchronously, manually
- Loading uniforms from file at runtime
- Lookup cube rendering in background thread,
  automatically triggered by timeouts

Wishlist, to keep in mind:
- Progressive enhancement
  + Progressively increasing cubemap resolution
- An space-style camera with no up and down
- Resizable window
- Changing image resolution on the fly
- Environment maps
- Fix mouse movement initialization with low FPS
- Background precalc progress indication
- Rewinding movements
	+ Saving precalc checkpoints for faster re-rendering?

Notes:
- Limit quality degradation when using cubemap:
  use pixel size when tracing through cubemap;
  ignore cubemap texels that are too big on screen, including side hits
- Can use multiple OpenGL contexts for background rendering.
- Cubemap face resolution is not image resolution; it depends on image FOV.
  Also, better make it even more for better quality
